steps:
  # Step 1: Zip the source code
  - name: 'ubuntu'
    id: 'Zip source'
    entrypoint: bash
    args:
      - -c
      - |
        apt-get update && apt-get install -y zip
        zip -r app.zip . -x cloudbuild.yaml

  # Step 2: Upload ZIP to Artifact Registry (generic)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Upload to Artifact Registry'
    entrypoint: bash
    args:
      - -c
      - |
        VER=$(date +%Y%m%d%H%M%S)
        echo $VER > /workspace/version.txt
        gcloud artifacts files upload app.zip \
          --project=onyx-antler-459216-j6 \
          --location=asia-south1 \
          --repository=generic-repo \
          --package=vm-flask-app \
          --version=$VER

  # Step 3: Create VM if not exists
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Create VM if needed'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud compute instances describe app-vm --zone=asia-south1-a --project=onyx-antler-459216-j6 \
        || gcloud compute instances create app-vm \
             --zone=asia-south1-a \
             --machine-type=e2-micro \
             --image-family=debian-11 \
             --image-project=debian-cloud \
             --tags=http-server \
             --scopes=https://www.googleapis.com/auth/cloud-platform \
             --boot-disk-size=20GB \
             --project=onyx-antler-459216-j6

  # Step 4: Create startup.sh script
  - name: 'ubuntu'
    id: 'Create startup script'
    entrypoint: bash
    args:
      - -c
      - |
        cat << 'EOF' > /workspace/startup.sh
#!/bin/bash
set -e

sudo apt-get update
sudo apt-get install -y unzip curl python3 python3-pip

VERSION=$(cat /home/praveen_a/version.txt)
TOKEN=$(gcloud auth print-access-token)

curl -H "Authorization: Bearer $TOKEN" \
  -o app.zip \
  "https://asia-south1-artifactregistry.googleapis.com/v1/projects/onyx-antler-459216-j6/locations/asia-south1/repositories/generic-repo/packages/vm-flask-app/versions/${VERSION}/files/app.zip?alt=media"

unzip -o app.zip -d app-dir
cd app-dir
pip3 install -r requirements.txt
nohup python3 main.py > app.log 2>&1 &
EOF

  # Step 5: Copy files to VM
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Copy to VM'
    args:
      - compute
      - scp
      - /workspace/startup.sh
      - /workspace/version.txt
      - praveen_a@app-vm:/home/praveen_a
      - --zone=asia-south1-a
      - --project=onyx-antler-459216-j6

  # Step 6: SSH and run the script
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Run startup on VM'
    args:
      - compute
      - ssh
      - praveen_a@app-vm
      - --zone=asia-south1-a
      - --project=onyx-antler-459216-j6
      - --command=bash /home/praveen_a/startup.sh

options:
  logging: CLOUD_LOGGING_ONLY
